#!/bin/sh
#
# Copyright (c) 2020 Sean Davies <sean@city17.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

outfile=/tmp/${0##*/}.out
tmpfile=/tmp/${0##*/}.tmp

# include the python user script directory
PATH=${PATH}:${HOME}/.local/bin

die()
{
	echo "$1" 1>&2
	exit 1
}

usage()
{
	die "usage: ${0##*/} [-m recipient] [-u] domain ..."
}

cleanup()
{
	for file in ${outfile} ${tmpfile}; do
		[ -f "${file}" ] && rm -f -- ${file}
	done
}

while getopts "m:u" arg; do
	case ${arg} in
	m)	rcpt_to=${OPTARG}
		mflag=1 ;;
	u)	uflag=1 ;;
	*)	usage ;;
	esac
done
shift $((OPTIND - 1))
[ "$#" -gt 0 ] || usage

if ! command -v > /dev/null dnstwist; then
	die "${0##*/}: dnstwist: command not found"
fi

trap "cleanup" 0 1 2 3 15

domains="$*"
for domain in ${domains}; do

	archivedir=${HOME}/.${0##*/}
	archive=${archivedir}/${domain}
	if [ ! -d "${archivedir}" ]; then
		mkdir -- ${archivedir} || exit 1
	fi

	# ignore $uflag if $archive does not exist
	if [ "${uflag:=0}" -eq 1 ] && [ ! -f "${archive}" ]; then
		uflag=0
	fi

	# `dnstwist -o` cannot append to a file
	cleanup

	dnstwist -r -f csv -o ${tmpfile} ${domain} || exit 1
	[ -s "${tmpfile}" ] || continue

	awk 'BEGIN {FS = ","} {if (NR!=1 && NR!=2) {print $2}}' ${tmpfile} \
	    | sort | grep -v "^$" > ${outfile}
	[ -s "${outfile}" ] || continue

	if [ "${uflag}" -eq 1 ]; then
		sort ${outfile} ${archive} | uniq -u > ${tmpfile}
		if [ -s "${tmpfile}" ]; then
			cp -f -- ${outfile} ${archive}
			cp -f -- ${tmpfile} ${outfile}
		else
			continue
		fi
	else
		cp -f -- ${outfile} ${archive}
	fi

	if [ "${mflag:-0}" -eq 1 ]; then
		mail -s "${domain} report" ${rcpt_to} < ${outfile}
	else
		cat ${outfile}
	fi
done
